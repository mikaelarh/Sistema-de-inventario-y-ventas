/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tiendita;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tiendita.Conexiones.conexion;

/**
 *
 * @author Mikaela Estefania Ramirez Herrera <Estefania_mikaela@hotmail.com>
 */
public class Registros extends javax.swing.JFrame {

    /**
     * Creates new form Reporte
     */
    public Registros() {
        initComponents();
        jScrollPane3.setVisible(false);
        TabEx.setVisible(false);
        cargar(plus);
        cargar3(plus);
        calendar.setTime(date);
        this.setExtendedState( JFrame.MAXIMIZED_BOTH );//maximizado
        this.toFront();
        this.getContentPane().setBackground(Color.white);
        TabVendedor.getTableHeader().setFont(new java.awt.Font("Tahoma", 0, 14));        
    }
    DefaultTableModel model;
    DefaultTableModel model2;
    DefaultTableModel model3;
    static Connection con;
    Date date = new Date();
    Calendar calendar = Calendar.getInstance();
    int nwoy = calendar.get(Calendar.WEEK_OF_YEAR);
    DateFormat day = new SimpleDateFormat("dd");
    DateFormat month = new SimpleDateFormat("MM");
    DateFormat year = new SimpleDateFormat("yyyy");
    String SQL = "SELECT `Id`,usuarios.Nombre,`FechaDeAcceso`,`HoraDeAcceso`,`CajaInicial`,`FechaDeCierre`,`HoraDeCierre`,`CajaFinal`, Acceso " +
                "FROM `registros` INNER JOIN usuarios ON usuarios.IdUsuario=registros.IdUsuario ";
    String plus = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabVendedor = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Exportar = new javax.swing.JButton();
        filtro = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabEx = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.FlowLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TabVendedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TabVendedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Vendedor", "Fecha Acceso", "Hora Acceso", "Caja inicial", "Fecha Cierre", "Hora Cierre", "Caja Final", "Acceso"
            }
        ));
        jScrollPane1.setViewportView(TabVendedor);
        if (TabVendedor.getColumnModel().getColumnCount() > 0) {
            TabVendedor.getColumnModel().getColumn(0).setMinWidth(50);
            TabVendedor.getColumnModel().getColumn(0).setPreferredWidth(50);
            TabVendedor.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 940, 370));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Registros de Sesion");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, -1, -1));

        Exportar.setBackground(new java.awt.Color(0, 153, 102));
        Exportar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Exportar.setText("Exportar");
        Exportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportarActionPerformed(evt);
            }
        });
        jPanel1.add(Exportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 500, 160, 40));

        filtro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        filtro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semana", "Historia" }));
        filtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroActionPerformed(evt);
            }
        });
        jPanel1.add(filtro, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        TabEx.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Vendedor", "Fecha Acceso", "Hora Acceso", "Caja inicial", "Fecha Cierre", "Hora Cierre", "Caja Final","Acceso"
            }
        ));
        TabEx.setOpaque(false);
        jScrollPane3.setViewportView(TabEx);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 80, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("@ADMINISTRADOR");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 90, -1, -1));

        jButton1.setBackground(new java.awt.Color(204, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Eliminar Registros");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, 150, 40));

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportarActionPerformed
        ToExcel2.Exportar();
    }//GEN-LAST:event_ExportarActionPerformed

    private void filtroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroActionPerformed
        switch (filtro.getSelectedIndex()) {
            case 0:
                plus = "WHERE Semana='" + nwoy + "'";
                cargar3(plus);
                cargar3(plus);
                break;
            case 1:
                plus = "";
                cargar(plus);
                cargar3(plus);
                break;
        }
    }//GEN-LAST:event_filtroActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DeleteAll();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cargar(String Plus) {
        clear();
//        titulos();
        String[] registros = new String[9];
        try {
            con = conexion.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL+Plus);
            while (rs.next()) {
                registros[0] = rs.getString("Id");
                registros[1] = rs.getString("usuarios.Nombre");
                registros[2] = rs.getString("FechaDeAcceso");
                registros[3] = rs.getString("HoraDeAcceso");
                registros[4] = rs.getString("CajaInicial");
                registros[5] = rs.getString("FechaDeCierre");
                registros[6] = rs.getString("HoraDeCierre");
                registros[7] = rs.getString("CajaFinal");
                registros[8] = rs.getString("Acceso");
                model.addRow(registros);
            }
            TabVendedor.setModel(model);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    private void cargar3(String plus) {
        clear3();
//        titulos();
        String[] registros = new String[9];
        try {
            con = conexion.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL + plus);
                registros[0] = "-";
                registros[1] = "-";
                registros[2] = "-";
                registros[3] = "-";
                registros[4] = "-";
                registros[5] = "-";
                registros[6] = "-";
                registros[7] = "-";
                registros[8] = "-";
                model3.addRow(registros);
            while (rs.next()) {
                registros[0] = rs.getString("Id");
                registros[1] = rs.getString("usuarios.Nombre");
                registros[2] = rs.getString("FechaDeAcceso");
                registros[3] = rs.getString("HoraDeAcceso");
                registros[4] = rs.getString("CajaInicial");
                registros[5] = rs.getString("FechaDeCierre");
                registros[6] = rs.getString("HoraDeCierre");
                registros[7] = rs.getString("CajaFinal");
                registros[8] = rs.getString("Acceso");
                model3.addRow(registros);
            }
            TabEx.setModel(model3);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    private void clear() {
        model = ((DefaultTableModel) TabVendedor.getModel());
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
    }

    private void clear3() {
        model3 = ((DefaultTableModel) TabEx.getModel());
        while (model3.getRowCount() > 0) {
            model3.removeRow(0);
        }
    }
    
    public void DeleteAll() {
       int x = JOptionPane.showConfirmDialog(null, "¿Desea eliminar todos los registros actuales?", "Elige una opcion", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            try {
                con = conexion.getConnection();
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                PreparedStatement ps = con.prepareStatement("TRUNCATE `pvdb`.`registros`");
                int res = ps.executeUpdate();
            } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
                Logger.getLogger(Tiendita.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Toda la informacion fue eliminada");
        } else {
            JOptionPane.showMessageDialog(null, "Proceso Cancelado");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exportar;
    public static javax.swing.JTable TabEx;
    private javax.swing.JTable TabVendedor;
    private javax.swing.JComboBox<String> filtro;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
